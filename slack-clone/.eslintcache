[{"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\index.js":"1","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\App.js":"2","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\reportWebVitals.js":"3","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\Header.js":"4","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\Sidebar.js":"5","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\SidebarOption.js":"6","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\firebase.js":"7","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\Chat.js":"8","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\Message.js":"9","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\Login.js":"10","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\StateProvider.js":"11","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\reducer.js":"12","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\ChatInput.js":"13"},{"size":703,"mtime":1609795380348,"results":"14","hashOfConfig":"15"},{"size":1084,"mtime":1609795654729,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1057,"mtime":1609796478471,"results":"18","hashOfConfig":"15"},{"size":2554,"mtime":1609797198243,"results":"19","hashOfConfig":"15"},{"size":1026,"mtime":1609775684527,"results":"20","hashOfConfig":"15"},{"size":673,"mtime":1609691358705,"results":"21","hashOfConfig":"15"},{"size":2032,"mtime":1609946839916,"results":"22","hashOfConfig":"15"},{"size":510,"mtime":1609789545740,"results":"23","hashOfConfig":"15"},{"size":1125,"mtime":1609796144942,"results":"24","hashOfConfig":"15"},{"size":368,"mtime":1609794541245,"results":"25","hashOfConfig":"15"},{"size":371,"mtime":1610025154701,"results":"26","hashOfConfig":"15"},{"size":1308,"mtime":1610026880319,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"w0oc88",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\index.js",[],["59","60"],"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\App.js",["61"],"import Header from './component/Header';\nimport Sidebar from './component/Sidebar';\nimport './css/App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Chat from './component/Chat';\nimport Login from './component/Login';\nimport { useStateValue } from './component/StateProvider';\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n  return (\n    //BEM naming convention\n    <div className='app'>\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n            {/* Header*/}\n            <Header />\n            <div className='app__body'>\n              {/* Sidebar*/}\n              <Sidebar />\n              {/* React-Router->Chat screen*/}\n              <Switch>\n                <Route path='/room/:roomId'>\n                  <Chat />\n                </Route>\n                <Route path='/'>\n                  <h1>Welcome</h1>\n                </Route>\n              </Switch>\n            </div>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\reportWebVitals.js",[],"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\Header.js",[],"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\Sidebar.js",[],"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\SidebarOption.js",[],"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\firebase.js",[],"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\Chat.js",[],"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\Message.js",[],["62","63"],"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\Login.js",["64"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport '../css/Login.css';\r\nimport { auth, provider } from '../firebase';\r\nimport { useStateValue } from '../component/StateProvider';\r\nimport { actionTypes } from '../reducer';\r\n\r\nfunction Login() {\r\n  const [state, dispatch] = useStateValue();\r\n\r\n  //google authentication\r\n  //user paylasımı firabseden ac\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then(result => {\r\n        console.log(result);\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className='login'>\r\n      <div className='login__container'>\r\n        <img\r\n          src='https://www.flaticon.com/svg/static/icons/svg/2111/2111615.svg'\r\n          alt=''\r\n        />\r\n        <h1>Sign in to Ilayda Ozdemir Programmer HQ </h1>\r\n        <p>ilaydaozdemir.slack.com</p>\r\n        <Button onClick={signIn}>Sıgn In with Google</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\StateProvider.js",[],"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\reducer.js",[],"C:\\Users\\ilayda\\Documents\\-Slack-Clone\\slack-clone\\src\\component\\ChatInput.js",["65"],"import React, { useState } from 'react';\r\nimport '../css/ChatInput.css';\r\nimport db from '../firebase';\r\nimport Message from './Message';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase';\r\n\r\nfunction ChatInput({ channelName, channelId }) {\r\n  const [input, setInput] = useState('');\r\n  const [{ user }] = useStateValue();\r\n\r\n  const sendMessage = e => {\r\n    e.preventDefault();\r\n    console.log('user', user);\r\n    console.log('user photo', user.photoURL);\r\n\r\n    console.log(firebase.firestore.FieldValue.timestamp);\r\n\r\n    if (channelId) {\r\n      db.collection('rooms').doc(channelId).collection('messages').doc().set({\r\n        message: input,\r\n        user: user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        userImage: user.photoURL,\r\n      });\r\n      setInput('');\r\n    } else {\r\n      console.log('channelId undefined');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='chatInput'>\r\n      <form>\r\n        <input\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          placeholder={`Message #${channelName?.toLowerCase()}`}\r\n        />\r\n        <button type='submit' onClick={sendMessage}>\r\n          SEND\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":11,"column":20,"nodeType":"72","messageId":"73","endLine":11,"endColumn":28},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},{"ruleId":"70","severity":1,"message":"76","line":9,"column":10,"nodeType":"72","messageId":"73","endLine":9,"endColumn":15},{"ruleId":"70","severity":1,"message":"77","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":15},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["78"],["79"],"'state' is assigned a value but never used.","'Message' is defined but never used.","no-global-assign","no-unsafe-negation"]